swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/accounts:
    get:
      security:
        - Bearer: []
      tags:
        - Accounts Module
      summary: User Accounts API
      description: Get a list of the user's accounts
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: User accounts retrieved successully
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 200
              message:
                type: string
                example: All Accounts retrieved successfully
              body:
                type: object
                properties:
                  accounts:
                    type: array
                    items:
                      $ref: '#/definitions/Account'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorised   
        '500':
          description: Internal Server Error
          
  /user/accounts/{AccountId}:
    get:
      security:
      - Bearer: []
      tags:
        - Accounts Module
      summary: User Account API
      description: Get a user's account by ID
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: AccountId
          description: A unique identifier used to identify the account
          required: true
          type: string  
      produces:
        - application/json
      responses:
        '200':
          description: Account retrieved Successfully
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 200
              message:
                type: string
                example: Account retrieved successfully
              body:
                $ref: '#/definitions/Account'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorised   
        '500':
          description: Internal Server Error         
     
  /user/accounts/{AccountId}/transactions:
    get:
      security:
      - Bearer: []
      tags:
        - Transactions Module
      summary: Account Transactions
      description: Get all the transactions related to an account
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: AccountId
          description: A unique identifier used to identify the account
          required: true
          type: string  
      produces:
        - application/json
      responses:
        '200':
          description: Transactions retrieved Successfully
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 200
              message:
                type: string
                example: All Transactions retrieved successfully
              body:
                type: object
                properties:
                  AccountId:
                    type: integer
                    format: int64
                    example: 13719713158835300
                  transactions:
                    type: array
                    items:
                      $ref: '#/definitions/Transaction'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorised   
        '500':
          description: Internal Server Error   
 
  /user/accounts/{AccountId}/transactions/{transactionsId}:
    get:
      security:
      - Bearer: []
      tags:
        - Transactions Module
      summary: Account Transaction
      description: Get a specific transaction by ID related to an account
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: AccountId
          description: A unique identifier used to identify the account
          required: true
          type: string
        - in: path
          name: transactionsId
          description: A unique identifier used to identify the transaction
          required: true
          type: string     
      produces:
        - application/json
      responses:
        '200':
          description: Transaction retrieved Successfully
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 200
              message:
                type: string
                example: Transaction retrieved successfully
              body:
                type: object
                properties:
                  AccountId:
                    type: integer
                    format: int64
                    example: 13719713158835300
                  transaction:
                    $ref: '#/definitions/Transaction'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorised   
        '500':
          description: Internal Server Error  
    patch:
      security:
      - Bearer: []
      tags:
        - Transactions Module
      summary: Account Transaction
      description: Update category/notes fields in a transaction (by ID related to an account)
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: AccountId
          description: A unique identifier used to identify the account
          required: true
          type: string
        - in: path
          name: transactionsId
          description: A unique identifier used to identify the transaction
          required: true
          type: string
        - in: body
          name: body
          description: Update category & notes attributes
          required: true
          schema:
            $ref: '#/definitions/Information'  
      produces:
        - application/json
      responses:
        '200':
          description: Transaction updated Successfully
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 200
              message:
                type: string
                example: Transaction updated successfully
              body:
                type: object
                properties:
                  AccountId:
                    type: integer
                    format: int64
                    example: 13719713158835300
                  transaction:
                    $ref: '#/definitions/Transaction'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorised   
        '500':
          description: Internal Server Error
          
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  Account:
    type: object
    required:
    - accountId
    - description
    - balance
    properties:
      accountId:
        type: integer
        format: int64
        example: 13719713158835300
        description: unique Id for a user account
      description:
        type: string
        example: Argent Bank Checking (x8349)
        enum: [Checking, Credit Card, Savings]
        description: type of account
      balance:
        type: number
        format: float
        example: 2082.79 
        description: available balance
        
  Transaction:
    type: object
    required:
    - transactionId
    - date
    - description
    - amount
    - balance
    - type
    properties:
      transactionId:
        type: string
        example: ACRAF23DB3C4
        description: unique transaction Id
      date: 
        type: string
        format: date-time
        description: date the transaction cleared
      description:
        type: string
        example: Golden Sun Bakery
        description: name of sender or recipient
      amount:
        type: number
        format: float
        example: 5.00
        description: transaction amount
      balance:
        type: number
        format: float
        example: 2082.79
        description: balance after current transaction
      type:
        type: string
        example: Electronic
        enum: [ATM, Charge, Check, Deposit, Electronic, Misc, Online, POS, Transfer, Withdrawal]
        description: transaction type
      Additional:
        $ref: '#/definitions/Information'
        
  Information:
    type: object
    properties:
      category:
        type: string
        default: None
        enum: [Electricity, Food, Gas, Loans, Mortgage, None, Rent, Savings, Tax, Travel, Other]
        description: transaction category type added by a user
      notes:
        type: string
        example: French Baguette
        description: personal notes added by a user about a transaction